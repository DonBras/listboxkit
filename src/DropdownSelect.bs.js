// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var OptionProps = require("./OptionProps.bs.js");
var ToggleProps = require("./ToggleProps.bs.js");

function useDropdownSelect(labelId, options) {
  var match = React.useState(function () {
        return false;
      });
  var setMenuOpen = match[1];
  var menuOpen = match[0];
  var match$1 = React.useState(function () {
        return -1;
      });
  var setHighlightedIndex = match$1[1];
  var highlightedIndex = match$1[0];
  var match$2 = React.useState(function () {
        return -1;
      });
  var setSelectedIndex = match$2[1];
  var selectedIndex = match$2[0];
  var size = options.length;
  var highlightNext = function (param) {
    return Curry._1(setHighlightedIndex, (function (param) {
                  if ((size - param | 0) === 1) {
                    return 0;
                  } else {
                    return param + 1 | 0;
                  }
                }));
  };
  var highlightPrev = function (param) {
    return Curry._1(setHighlightedIndex, (function (param) {
                  if (param === 0) {
                    return size - 1 | 0;
                  } else {
                    return param - 1 | 0;
                  }
                }));
  };
  var showMenu = function (param) {
    return Curry._1(setMenuOpen, (function (param) {
                  return true;
                }));
  };
  var hideMenu = function (param) {
    return Curry._1(setMenuOpen, (function (param) {
                  return false;
                }));
  };
  var selectIndex = function (index) {
    return Curry._1(setSelectedIndex, (function (param) {
                  return index;
                }));
  };
  var selectHighlighted = function (param) {
    return Curry._1(setSelectedIndex, (function (param) {
                  return highlightedIndex;
                }));
  };
  var highlightFirst = function (param) {
    return Curry._1(setHighlightedIndex, (function (param) {
                  return 0;
                }));
  };
  var highlightLast = function (param) {
    return Curry._1(setHighlightedIndex, (function (param) {
                  return size - 1 | 0;
                }));
  };
  var getLabelProps = function (param) {
    return {
            id: labelId
          };
  };
  var getToggleProps = function (param) {
    return {
            ariaLabelledby: labelId,
            tabIndex: 0,
            onClick: (function (param) {
                return ToggleProps.onClick(showMenu, param);
              }),
            onKeyDown: (function (param) {
                return ToggleProps.onKeyDown(hideMenu, showMenu, menuOpen, highlightNext, highlightPrev, highlightFirst, highlightLast, selectHighlighted, param);
              }),
            onBlur: (function (param) {
                return ToggleProps.onBlur(hideMenu, param);
              })
          };
  };
  var getMenuProps = function (param) {
    return {
            ariaLabelledby: labelId
          };
  };
  var getOptionProps = function (index) {
    return {
            role: "option",
            ariaSelected: OptionProps.ariaSelected(index, selectedIndex),
            onClick: (function (param) {
                return OptionProps.onClick(index, selectIndex, param);
              })
          };
  };
  return {
          selectedIndex: selectedIndex,
          highlightedIndex: highlightedIndex,
          menuOpen: menuOpen,
          getToggleProps: getToggleProps,
          getLabelProps: getLabelProps,
          getMenuProps: getMenuProps,
          getOptionProps: getOptionProps,
          showMenu: showMenu,
          hideMenu: hideMenu
        };
}

exports.useDropdownSelect = useDropdownSelect;
/* react Not a pure module */
