(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[828],{4192:function(e,t,n){"use strict";var o=n(3981),i=n(8758),r=n(1974),l=n(3960),s=["Red","Green","Blue"];var d=function(e){var t=l.useDropdownListbox(s,!1,void 0),n=t.getOptionProps,d=t.selectedIndex,a=t.highlightedIndex,u=o._1(t.getContainerProps,void 0),c=u.onKeyDown,p=o._1(t.getDropdownProps,void 0),h=-1===d?"Select a color":r.get(s,d);return i.createElement("div",void 0,i.createElement("div",{className:"dropdown-button",role:p.role,tabIndex:p.tabIndex,onKeyDown:p.onKeyDown,onBlur:p.onBlur,onClick:p.onClick},h,i.createElement("div",{className:"dropdown"},i.createElement("ul",{className:"listbox",hidden:!t.menuVisible,role:u.role,tabIndex:u.tabIndex,onKeyDown:c,onFocus:u.onFocus},s.map((function(e,t){var r=o._1(n,t),l=["listbox-option",a===t?"highlighted":""].join(" ");return i.createElement("li",{key:e,"aria-selected":r["aria-selected"],className:l,role:r.role,onKeyDown:c,onClick:r.onClick},e)}))))))};t.S=d},8937:function(e,t,n){"use strict";var o=n(3981),i=n(8758),r=n(7361);t.useControls=function(e,t){var n=void 0!==e&&e,l=r.useControls(n,t),s=l.selectIndex,d=i.useState((function(){return!1})),a=d[1];return{hideMenu:function(e){return o._1(a,(function(e){return!1}))},highlightedIndex:l.highlightedIndex,highlightFirst:l.highlightFirst,highlightIndex:l.highlightIndex,highlightLast:l.highlightLast,highlightNext:l.highlightNext,highlightPrev:l.highlightPrev,menuVisible:d[0],resetHighlighted:l.resetHighlighted,selectedIndex:l.selectedIndex,selectedIndexes:l.selectedIndexes,selectHighlighted:l.selectHighlighted,selectIndex:function(e){return o._1(s,e),o._1(a,(function(e){return!1}))},selectNext:l.selectNext,selectPrev:l.selectPrev,showMenu:function(e){return o._1(a,(function(e){return!0}))}}}},7361:function(e,t,n){"use strict";var o=n(3981),i=n(8758),r=n(1509),l=n(7719),s=n(8956);function d(e){return 0}function a(e,t){return 1==(e-t|0)?0:t+1|0}function u(e,t){return t<=0?e-1|0:t-1|0}function c(e){return-1}var p={firstIndex:d,lastIndex:function(e,t){return e-1|0},nextIndex:a,prevIndex:u,reset:c};function h(e){return s.getWithDefault(l.get(e,0),-1)}var g=r.caml_equal,x=r.caml_notequal;function m(e,t,n,i,s){var d=void 0!==e&&e;o._1(n,(function(e){return s})),o._1(i,(function(e){var n=l.some(e,(function(e){return r.caml_equal(s,e)}));return t?d?n?e:l.concat(e,[s]):n?l.keep(e,(function(e){return r.caml_notequal(s,e)})):l.concat(e,[s]):d?n?e:[s]:n?[]:[s]}))}t.Navigation=p,t.firstIndex=h,t.equals=g,t.diff=x,t.selectIndex=m,t.useControls=function(e,t){var n=i.useState((function(){return[]})),r=n[1],l=n[0],s=i.useState((function(){return-1})),p=s[1],g=s[0],x=h(l);return{highlightedIndex:g,highlightFirst:function(e){return o._1(p,d)},highlightIndex:function(e){return o._1(p,(function(t){return e}))},highlightLast:function(e){return o._1(p,(function(e){return t-1|0}))},highlightNext:function(e){return o._1(p,(function(e){return a(t,e)}))},highlightPrev:function(e){return o._1(p,(function(e){return u(t,e)}))},resetHighlighted:function(e){return o._1(p,c)},selectedIndex:x,selectedIndexes:l,selectHighlighted:function(t){return m(void 0,e,p,r,g)},selectIndex:function(t){return m(void 0,e,p,r,t)},selectNext:function(n){return m(!0,e,p,r,a(t,g))},selectPrev:function(n){return m(!0,e,p,r,u(t,g))}}}},3586:function(e,t,n){"use strict";var o=n(3981),i=n(7719),r=n(8956);var l=function(e){return e.relatedTarget&&e.target.contains(e.relatedTarget)},s={isEventFromInside:l};t.onKeyDown=function(e,t,n,i,r,l,s,d,a,u,c){var p=c.key,h=c.shiftKey;switch("Tab"!==p&&c.preventDefault(),p){case"ArrowDown":return l?h?o._1(d,void 0):o._1(i,void 0):o._1(u,void 0);case"ArrowUp":return l?h?o._1(a,void 0):o._1(r,void 0):o._1(u,void 0);case"End":return l?o._1(n,void 0):void 0;case" ":case"Enter":return l?(o._1(s,void 0),o._1(e,void 0)):o._1(u,void 0);case"Escape":return l?o._1(e,void 0):void 0;case"Home":return l?o._1(t,void 0):void 0;default:return}},t.Dom=s,t.onBlur=function(e,t,n,i){var r=l(i);return void 0!==n&&n&&void 0!==t&&!r?o._1(t,void 0):o._1(e,void 0)},t.onFocus=function(e,t,n){return o._1(t,r.getWithDefault(i.get(i.reverse(e),0),0))},t.onClick=function(e,t,n){return o._1(t,e)},t.onDropdownClick=function(e,t,n,i){return e?o._1(t,void 0):o._1(n,void 0)}},3960:function(e,t,n){"use strict";var o=n(4427),i=n(7108).useDropdownListbox,r=o.noop,l=o.useListbox;t.useDropdownListbox=i,t.noop=r,t.useListbox=l},7108:function(e,t,n){"use strict";var o=n(7719),i=n(3586),r=n(8937);t.useDropdownListbox=function(e,t,n){var l=void 0!==t&&t,s=e.length,d=r.useControls(l,s),a=d.showMenu,u=d.selectPrev,c=d.selectNext,p=d.selectIndex,h=d.selectHighlighted,g=d.selectedIndexes,x=d.resetHighlighted,m=d.menuVisible,b=d.highlightPrev,f=d.highlightNext,k=d.highlightLast,v=d.highlightIndex,w=d.highlightFirst,N=d.hideMenu;return{highlightedIndex:d.highlightedIndex,menuVisible:m,selectedIndex:d.selectedIndex,selectedIndexes:g,getContainerProps:function(e){return{role:"listbox",tabIndex:0,onKeyDown:function(e){},onFocus:function(e){return i.onFocus(g,v,e)}}},getDropdownProps:function(e){var t=m,n=N;return{role:"combobox",tabIndex:0,onBlur:function(e){return i.onBlur(x,n,t,e)},onClick:function(e){return i.onDropdownClick(m,N,a,e)},onKeyDown:function(e){return i.onKeyDown(N,w,k,f,b,m,h,c,u,a,e)}}},getOptionProps:function(e){return{"aria-selected":o.some(g,(function(t){return t===e})),role:"option",onClick:function(t){return i.onClick(e,p,t)}}},hideMenu:N,showMenu:a}}},4427:function(e,t,n){"use strict";var o=n(7719),i=n(3586),r=n(7361);function l(e){}t.noop=l,t.useListbox=function(e,t,n){var s=void 0!==t&&t,d=e.length,a=r.useControls(s,d),u=a.selectPrev,c=a.selectNext,p=a.selectIndex,h=a.selectHighlighted,g=a.selectedIndexes,x=a.resetHighlighted,m=a.highlightPrev,b=a.highlightNext,f=a.highlightLast,k=a.highlightIndex,v=a.highlightFirst;return{highlightedIndex:a.highlightedIndex,selectedIndex:a.selectedIndex,selectedIndexes:g,getContainerProps:function(e){return{role:"listbox",tabIndex:0,onBlur:function(e){return i.onBlur(x,undefined,undefined,e)},onKeyDown:function(e){return i.onKeyDown(l,v,f,b,m,!0,h,c,u,l,e)},onFocus:function(e){return i.onFocus(g,k,e)}}},getOptionProps:function(e){return{"aria-selected":o.some(g,(function(t){return t===e})),role:"option",onClick:function(t){return i.onClick(e,p,t)}}}}}},3068:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return a},metadata:function(){return u},toc:function(){return c},default:function(){return h}});var o=n(4034),i=n(9973),r=(n(8758),n(3905)),l=n(4192),s=["components"],d={id:"use_dropdown_listbox",title:"useDropdownListbox",sidebar_label:"useDropdownListbox",slug:"/use_dropdown_listbox"},a=void 0,u={unversionedId:"use_dropdown_listbox",id:"use_dropdown_listbox",isDocsHomePage:!1,title:"useDropdownListbox",description:"The useDropdownListbox hook provides behaviours for implementing collapsible list boxes,",source:"@site/docs/use_dropdown_listbox.mdx",sourceDirName:".",slug:"/use_dropdown_listbox",permalink:"/listboxkit/docs/use_dropdown_listbox",editUrl:"https://github.com/brnrdog/listbox/edit/master/docs/docs/use_dropdown_listbox.mdx",version:"current",frontMatter:{id:"use_dropdown_listbox",title:"useDropdownListbox",sidebar_label:"useDropdownListbox",slug:"/use_dropdown_listbox"},sidebar:"docs",previous:{title:"useListbox",permalink:"/listboxkit/docs/use_listbox"}},c=[{value:"DropdownListbox properties",id:"dropdownlistbox-properties",children:[]},{value:"Example",id:"example",children:[]}],p={toc:c};function h(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The useDropdownListbox hook provides behaviours for implementing collapsible list boxes,\nlike dropdown select components."),(0,r.kt)("p",null,"Given a list of options, this hook returns a ",(0,r.kt)("inlineCode",{parentName:"p"},"dropdownListbox")," record containing the dropdown listbox current state and functions to control the listbox visibility and to bind event handlers and aria attributes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-res"},'  let options = ["Red", "Green", "Blue"]\n  let dropdownListbox = Listboxkit.useDropdownListbox(options, ~multiselect=false, ())\n')),(0,r.kt)("h3",{id:"dropdownlistbox-properties"},"DropdownListbox properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Properties"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"highlightedIndex"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"The current highlighted index, returns ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," when no option is highlighted.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"menuVisible"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"Indicates whether the list box with its options is visible")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"selectedIndex"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"The current selected index, returns ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," when no option is selected.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"selectedIndexes"),(0,r.kt)("td",{parentName:"tr",align:null},"array<int",">"),(0,r.kt)("td",{parentName:"tr",align:null},"The current selected indexes, in case is a ",(0,r.kt)("inlineCode",{parentName:"td"},"multiselect")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"getContainerProps"),(0,r.kt)("td",{parentName:"tr",align:null},"unit => listboxContainerProps"),(0,r.kt)("td",{parentName:"tr",align:null},"Returns a record containing the properties to be used in the container element.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"getDropdownProps"),(0,r.kt)("td",{parentName:"tr",align:null},"unit => dropdownProps"),(0,r.kt)("td",{parentName:"tr",align:null},"Returns a record containning the properties to be used in the dropdown element.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"getOptionProps"),(0,r.kt)("td",{parentName:"tr",align:null},"unit => listboxOptionProps"),(0,r.kt)("td",{parentName:"tr",align:null},"Returns a record containing the properties to be used in the option elements.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"hide"),(0,r.kt)("td",{parentName:"tr",align:null},"unit => unit"),(0,r.kt)("td",{parentName:"tr",align:null},"Hides the listbox element.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"show"),(0,r.kt)("td",{parentName:"tr",align:null},"unit => unit"),(0,r.kt)("td",{parentName:"tr",align:null},"Shows the listbox element.")))),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)(l.S,{mdxType:"DropdownSelect"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},'let options = ["Red", "Green", "Blue"]\n\n@react.component\nlet make = () => {\n  let {\n    highlightedIndex,\n    menuVisible,\n    selectedIndex,\n    getOptionProps,\n    getDropdownProps,\n    getContainerProps,\n  } = Listboxkit.useDropdownListbox(options, ~multiSelect=false, ())\n\n  let {role, tabIndex, onKeyDown, onFocus, onBlur} = getContainerProps()\n\n  let dropdownProps = getDropdownProps()\n  let selectedOption = selectedIndex === -1 ? "Select a color" : options[selectedIndex]\n\n  <div>\n    <div\n      role=dropdownProps.role\n      tabIndex=dropdownProps.tabIndex\n      onClick=dropdownProps.onClick\n      className="dropdown-button"\n      onKeyDown=dropdownProps.onKeyDown>\n      {selectedOption->React.string}\n      <div className="dropdown">\n        <ul className="listbox" role tabIndex onKeyDown onFocus onBlur hidden={!menuVisible}>\n          {options\n          ->Js.Array2.mapi((option, index) => {\n            let {ariaSelected, onClick, role} = getOptionProps(index)\n            let highlighted = highlightedIndex == index\n            let className =\n              ["listbox-option", highlighted ? "highlighted" : ""]->Js.Array2.joinWith(" ")\n\n            <li className key=option onClick onKeyDown role ariaSelected>\n              {option->React.string}\n            </li>\n          })\n          ->React.array}\n        </ul>\n      </div>\n    </div>\n  </div>\n}\n\n')))}h.isMDXComponent=!0}}]);